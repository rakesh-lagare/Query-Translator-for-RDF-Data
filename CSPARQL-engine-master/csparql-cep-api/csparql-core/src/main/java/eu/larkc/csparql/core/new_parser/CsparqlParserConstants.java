/**
 * Copyright 2011-2015 DEIB - Politecnico di Milano
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Acknowledgements:
 * We would like to thank Davide Barbieri, Emanuele Della Valle,
 * Marco Balduini, Soheila Dehghanzadeh, Shen Gao, and
 * Daniele Dell'Aglio for the effort in the development of the software.
 *
 * This work is partially supported by
 * - the European LarKC project (FP7-215535) of DEIB, Politecnico di
 * Milano
 * - the ERC grant “Search Computing” awarded to prof. Stefano Ceri
 * - the European ModaClouds project (FP7-ICT-2011-8-318484) of DEIB,
 * Politecnico di Milano
 * - the IBM Faculty Award 2013 grated to prof. Emanuele Della Valle;
 * - the City Data Fusion for Event Management 2013 project funded
 * by EIT Digital of DEIB, Politecnico di Milano
 * - the Dynamic and Distributed Information Systems Group of the
 * University of Zurich;
 * - INSIGHT NUIG and Science Foundation Ireland (SFI) under grant
 * No. SFI/12/RC/2289
 */
/* Generated By:JavaCC: Do not edit this line. CsparqlParserConstants.java */
package eu.larkc.csparql.core.new_parser ;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CsparqlParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PREFIX = 5;
  /** RegularExpression Id. */
  int BASE = 6;
  /** RegularExpression Id. */
  int SELECT = 7;
  /** RegularExpression Id. */
  int DESCRIBE = 8;
  /** RegularExpression Id. */
  int ADD = 9;
  /** RegularExpression Id. */
  int ASK = 10;
  /** RegularExpression Id. */
  int CONSTRUCT = 11;
  /** RegularExpression Id. */
  int FROM = 12;
  /** RegularExpression Id. */
  int WHERE = 13;
  /** RegularExpression Id. */
  int SINGLELETTERTEXT = 14;
  /** RegularExpression Id. */
  int NUMBERS = 15;
  /** RegularExpression Id. */
  int SYMBOL = 16;
  /** RegularExpression Id. */
  int IRIref = 17;
  /** RegularExpression Id. */
  int SPACE = 18;
  /** RegularExpression Id. */
  int REGISTERSTREAM = 19;
  /** RegularExpression Id. */
  int REGISTERQUERY = 20;
  /** RegularExpression Id. */
  int STREAM = 21;
  /** RegularExpression Id. */
  int AS = 22;
  /** RegularExpression Id. */
  int NAMED = 23;
  /** RegularExpression Id. */
  int RANGE = 24;
  /** RegularExpression Id. */
  int STEP = 25;
  /** RegularExpression Id. */
  int TUMBLING = 26;
  /** RegularExpression Id. */
  int TRIPLES = 27;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"prefix \"",
    "\"base \"",
    "\"select \"",
    "\"describe \"",
    "\"add \"",
    "\"ask \"",
    "\"construct \"",
    "\" from \"",
    "\"where {\"",
    "<SINGLELETTERTEXT>",
    "<NUMBERS>",
    "<SYMBOL>",
    "<IRIref>",
    "\" \"",
    "\"register stream \"",
    "\"register query \"",
    "\"stream \"",
    "\"as \"",
    "\"named \"",
    "\"[range \"",
    "\"step \"",
    "\"tumbling \"",
    "\"triples \"",
  };

}
